<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trading Hub - Analog Society</title>
    <link rel="stylesheet" href="/styles/main.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body>
    <div class="content-wrapper">
        <%- include('../partials/header') %>

        <main>
            <div class="container" style="padding: 2rem 0;">
                <h2>Trading Hub</h2>
                <p class="lead">Exchange, trade, rent, and share analog materials with the community.</p>
                
                <div class="page-actions">
                    <a href="/items/community" class="btn">Browse Materials</a>
                    <a href="/items/new" class="btn btn-secondary">Add Material</a>
                    <button id="viewMyExchanges" class="btn btn-secondary">My Exchanges</button>
                </div>

                <!-- Exchange Statistics -->
                <div class="community-stats">
                    <h3>Trading Statistics</h3>
                    <div class="stats-grid">
                        <div class="stat-card">
                            <div class="stat-number" id="totalExchanges">-</div>
                            <div class="stat-label">Active Exchanges</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number" id="completedTrades">-</div>
                            <div class="stat-label">Completed Trades</div>
                        </div>
                        <div class="stat-card">
                            <div class="stat-number" id="communityRating">-</div>
                            <div class="stat-label">Community Rating</div>
                        </div>
                    </div>
                </div>

                <!-- Recent Exchanges -->
                <div class="search-filter-section">
                    <h3>Recent Exchanges</h3>
                    <div id="recentExchanges" class="items-grid">
                        <!-- Will be populated by JavaScript -->
                    </div>
                </div>

                <!-- My Exchanges Panel (hidden by default) -->
                <div id="myExchangesPanel" class="search-filter-section" style="display: none;">
                    <h3>My Exchanges</h3>
                    <div class="filter-row">
                        <select id="exchangeFilter" class="filter-select">
                            <option value="all">All Exchanges</option>
                            <option value="Pending">Pending</option>
                            <option value="Negotiating">Negotiating</option>
                            <option value="Active">Active</option>
                            <option value="Completed">Completed</option>
                        </select>
                        <select id="typeFilter" class="filter-select">
                            <option value="all">All Types</option>
                            <option value="Trade">Trade</option>
                            <option value="Rent">Rent</option>
                            <option value="Sell">Sell</option>
                            <option value="Share">Share</option>
                        </select>
                    </div>
                    <div id="myExchangesList" class="items-grid">
                        <!-- Will be populated by JavaScript -->
                    </div>
                </div>
            </div>
        </main>

        <%- include('../partials/footer') %>
    </div>

    <!-- Exchange Request Modal -->
    <div id="exchangeModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h3 id="modalTitle">Request Exchange</h3>
            <form id="exchangeForm">
                <input type="hidden" id="itemId" name="itemId">
                <input type="hidden" id="exchangeType" name="exchangeType">
                
                <div class="form-group">
                    <label for="message">Message to Owner</label>
                    <textarea id="message" name="message" rows="4" class="search-input" 
                              placeholder="Explain why you're interested in this item and any terms you'd like to propose..."></textarea>
                </div>

                <!-- Trade-specific fields -->
                <div id="tradeFields" style="display: none;">
                    <div class="form-group">
                        <label for="offeredItem">Item to Trade</label>
                        <select id="offeredItem" name="offeredItemId" class="filter-select">
                            <option value="">Select an item to trade</option>
                        </select>
                    </div>
                </div>

                <!-- Rental-specific fields -->
                <div id="rentalFields" style="display: none;">
                    <div class="form-group">
                        <label for="rentalRate">Rental Rate (per period)</label>
                        <input type="number" id="rentalRate" name="rentalRate" class="search-input" min="0" step="0.01">
                    </div>
                    <div class="form-group">
                        <label for="rentalPeriod">Rental Period</label>
                        <select id="rentalPeriod" name="rentalPeriod" class="filter-select">
                            <option value="day">Per Day</option>
                            <option value="week">Per Week</option>
                            <option value="month">Per Month</option>
                        </select>
                    </div>
                </div>

                <!-- Sale-specific fields -->
                <div id="saleFields" style="display: none;">
                    <div class="form-group">
                        <label for="offeredPrice">Offered Price (USD)</label>
                        <input type="number" id="offeredPrice" name="offeredPrice" class="search-input" min="0" step="0.01">
                    </div>
                </div>

                <div class="form-group">
                    <label for="proposedStartDate">Proposed Start Date</label>
                    <input type="date" id="proposedStartDate" name="proposedStartDate" class="search-input">
                </div>

                <div class="form-group">
                    <label for="proposedEndDate">Proposed End Date</label>
                    <input type="date" id="proposedEndDate" name="proposedEndDate" class="search-input">
                </div>

                <div class="form-group">
                    <label for="terms">Additional Terms</label>
                    <textarea id="terms" name="terms" rows="3" class="search-input" 
                              placeholder="Any additional terms or conditions..."></textarea>
                </div>

                <div style="display: flex; gap: 1rem; margin-top: 2rem;">
                    <button type="submit" class="btn">Submit Request</button>
                    <button type="button" class="btn btn-secondary" onclick="closeModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Global variables
        let availableItems = [];
        let myExchanges = [];

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadTradingStats();
            loadRecentExchanges();
            loadMyExchanges();
            setupEventListeners();
        });

        function setupEventListeners() {
            document.getElementById('viewMyExchanges').addEventListener('click', toggleMyExchanges);
            document.getElementById('exchangeFilter').addEventListener('change', filterMyExchanges);
            document.getElementById('typeFilter').addEventListener('change', filterMyExchanges);
            document.querySelector('.close').addEventListener('click', closeModal);
            document.getElementById('exchangeForm').addEventListener('submit', handleExchangeSubmit);
        }

        async function loadTradingStats() {
            try {
                // This would be implemented with actual API calls
                document.getElementById('totalExchanges').textContent = '12';
                document.getElementById('completedTrades').textContent = '47';
                document.getElementById('communityRating').textContent = '4.8';
            } catch (error) {
                console.error('Error loading trading stats:', error);
            }
        }

        async function loadRecentExchanges() {
            try {
                // This would be implemented with actual API calls
                const container = document.getElementById('recentExchanges');
                container.innerHTML = '<p style="text-align: center; color: var(--text-secondary);">Loading recent exchanges...</p>';
                
                // Simulated data - replace with actual API call
                setTimeout(() => {
                    container.innerHTML = `
                        <div class="item-card">
                            <div class="item-info">
                                <div class="item-name">Sony Walkman Trade</div>
                                <div class="item-description">Trade request for vintage Sony Walkman WM-D6C</div>
                                <div class="item-meta">
                                    <span class="item-category">Trade</span>
                                    <span class="status-badge status-pending">Pending</span>
                                </div>
                            </div>
                        </div>
                        <div class="item-card">
                            <div class="item-info">
                                <div class="item-name">Analog Camera Rental</div>
                                <div class="item-description">Rental request for Canon AE-1 camera</div>
                                <div class="item-meta">
                                    <span class="item-category">Rent</span>
                                    <span class="status-badge status-accepted">Accepted</span>
                                </div>
                            </div>
                        </div>
                    `;
                }, 1000);
            } catch (error) {
                console.error('Error loading recent exchanges:', error);
            }
        }

        async function loadMyExchanges() {
            try {
                const response = await fetch('/trading/my-exchanges');
                const data = await response.json();
                
                if (response.ok) {
                    myExchanges = data.exchanges;
                    displayMyExchanges();
                } else {
                    console.error('Error loading exchanges:', data.error);
                }
            } catch (error) {
                console.error('Error loading my exchanges:', error);
            }
        }

        function displayMyExchanges(exchanges = myExchanges) {
            const container = document.getElementById('myExchangesList');
            
            if (exchanges.length === 0) {
                container.innerHTML = '<p style="text-align: center; color: var(--text-secondary);">No exchanges found.</p>';
                return;
            }

            container.innerHTML = exchanges.map(exchange => `
                <div class="item-card">
                    <div class="item-info">
                        <div class="item-name">${exchange.itemId.name}</div>
                        <div class="item-description">
                            ${exchange.exchangeType} request - ${exchange.status}
                            ${exchange.exchangeType === 'Rent' ? `($${exchange.rentalRate}/${exchange.rentalPeriod})` : ''}
                            ${exchange.exchangeType === 'Sell' ? `($${exchange.offeredPrice})` : ''}
                        </div>
                        <div class="item-meta">
                            <span class="item-category">${exchange.exchangeType}</span>
                            <span class="status-badge status-${exchange.status.toLowerCase()}">${exchange.status}</span>
                        </div>
                        <div class="item-actions">
                            <button class="btn" onclick="viewExchange('${exchange._id}')">View Details</button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        function filterMyExchanges() {
            const statusFilter = document.getElementById('exchangeFilter').value;
            const typeFilter = document.getElementById('typeFilter').value;
            
            let filtered = myExchanges;
            
            if (statusFilter !== 'all') {
                filtered = filtered.filter(exchange => exchange.status === statusFilter);
            }
            
            if (typeFilter !== 'all') {
                filtered = filtered.filter(exchange => exchange.exchangeType === typeFilter);
            }
            
            displayMyExchanges(filtered);
        }

        function toggleMyExchanges() {
            const panel = document.getElementById('myExchangesPanel');
            const button = document.getElementById('viewMyExchanges');
            
            if (panel.style.display === 'none') {
                panel.style.display = 'block';
                button.textContent = 'Hide My Exchanges';
            } else {
                panel.style.display = 'none';
                button.textContent = 'My Exchanges';
            }
        }

        function openExchangeModal(itemId, exchangeType) {
            document.getElementById('itemId').value = itemId;
            document.getElementById('exchangeType').value = exchangeType;
            document.getElementById('modalTitle').textContent = `Request ${exchangeType}`;
            
            // Show/hide relevant fields based on exchange type
            document.getElementById('tradeFields').style.display = exchangeType === 'Trade' ? 'block' : 'none';
            document.getElementById('rentalFields').style.display = exchangeType === 'Rent' ? 'block' : 'none';
            document.getElementById('saleFields').style.display = exchangeType === 'Sell' ? 'block' : 'none';
            
            // Load available items for trade
            if (exchangeType === 'Trade') {
                loadAvailableItemsForTrade();
            }
            
            document.getElementById('exchangeModal').style.display = 'block';
        }

        async function loadAvailableItemsForTrade() {
            try {
                const response = await fetch('/trading/available-items');
                const data = await response.json();
                
                if (response.ok) {
                    availableItems = data.items;
                    const select = document.getElementById('offeredItem');
                    select.innerHTML = '<option value="">Select an item to trade</option>' +
                        data.items.map(item => `<option value="${item._id}">${item.name}</option>`).join('');
                }
            } catch (error) {
                console.error('Error loading available items:', error);
            }
        }

        async function handleExchangeSubmit(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const exchangeData = Object.fromEntries(formData.entries());
            
            try {
                const response = await fetch('/trading', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(exchangeData)
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    alert('Exchange request submitted successfully!');
                    closeModal();
                    loadMyExchanges(); // Refresh the list
                } else {
                    alert('Error: ' + data.error);
                }
            } catch (error) {
                console.error('Error submitting exchange:', error);
                alert('Error submitting exchange request');
            }
        }

        function closeModal() {
            document.getElementById('exchangeModal').style.display = 'none';
            document.getElementById('exchangeForm').reset();
        }

        function viewExchange(exchangeId) {
            // Navigate to exchange detail page
            window.location.href = `/trading/${exchangeId}`;
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('exchangeModal');
            if (event.target === modal) {
                closeModal();
            }
        }
    </script>

    <style>
        .modal {
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background-color: var(--bg-card);
            margin: 5% auto;
            padding: 2rem;
            border-radius: 12px;
            width: 90%;
            max-width: 600px;
            position: relative;
            box-shadow: var(--shadow-heavy);
        }

        .close {
            position: absolute;
            right: 1rem;
            top: 1rem;
            font-size: 2rem;
            font-weight: bold;
            cursor: pointer;
            color: var(--text-secondary);
        }

        .close:hover {
            color: var(--text-primary);
        }
    </style>
</body>
</html>
